{"version":3,"sources":["components/Covidata.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","recovered","confirmed","active","deaths","lastupdatedtime","App","Covidata","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8EeA,EA3ED,WAEV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,+EAEKC,MAAM,0CAFX,cAEPC,EAFO,gBAGYA,EAAIC,OAHhB,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALhB,kDAObF,QAAQC,IAAR,MAPa,0DAAH,qDAelB,OAJAE,qBAAU,WACNT,MACD,IAGC,qCACI,oBAAIU,UAAU,UAAd,+BACA,oBAAIA,UAAU,YAAd,qCAEA,6BACI,qBAAIA,UAAU,OAAd,UAEI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,2CAA1B,WACA,mBAAGA,UAAU,0BAAb,wBAIR,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,gBACA,mBAAGA,UAAU,0BAAb,SAAwCZ,EAAKa,iBAIrD,qBAAKD,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,gBACA,mBAAGA,UAAU,0BAAb,SAAwCZ,EAAKc,iBAIpD,qBAAKF,UAAU,aAAf,SACG,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,aACA,mBAAGA,UAAU,0BAAb,SAAwCZ,EAAKe,cAIrD,qBAAKH,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,yCAA1B,YACA,mBAAGA,UAAU,0BAAb,SAAwCZ,EAAKgB,cAIrD,qBAAKJ,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,wCAA1B,cACA,mBAAGA,UAAU,sCAAb,SAAoDZ,EAAKiB,gCCzDtEC,EARH,WACV,OACE,mCACE,cAACC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3547740f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Covid.css'\r\n\r\nconst Covid = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        try {\r\n            const res = await fetch('https://api.covid19india.org/data.json');\r\n            const actualData = await res.json();\r\n            console.log(actualData.statewise[0]);\r\n            setData(actualData.statewise[0])\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"livepop\">ðŸ”´ Live</h1>\r\n            <h2 className=\"titleCard\">Covid19 Tracker Reactjs</h2>\r\n            {/* Main Data */}\r\n            <ul>\r\n                <li className=\"card\">\r\n                    {/* Cards */}\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span>COUNTRY</span> NAME</p>\r\n                            <p className=\"card__total card__small\">INDIA</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span>TOTAL</span> RECOVERED</p>\r\n                            <p className=\"card__total card__small\">{data.recovered}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span>TOTAL</span> CONFIRMED</p>\r\n                            <p className=\"card__total card__small\">{data.confirmed}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                     <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span>TOTAL</span> ACTIVE</p>\r\n                            <p className=\"card__total card__small\">{data.active}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span>TOTAL</span> DEATH</p>\r\n                            <p className=\"card__total card__small\">{data.deaths}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card__main\">\r\n                        <div className=\"card__inner\">\r\n                            <p className=\"card__name\"><span>LAST</span> UPDATED</p>\r\n                            <p className=\"card__total card__small updatedTime\">{data.lastupdatedtime}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid\r\n","import React from 'react';\nimport Covidata from './components/Covidata';\n\nconst App = () => {\n  return (\n    <>\n      <Covidata />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}